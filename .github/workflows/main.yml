# This is a basic workflow to help you get started with Actions

name: build_task

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  issues:
    types: [opened, reopened]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - name: Checkout
      uses: actions/checkout@master
      
    - name: ParseIssue
      id: parse
      uses: peter-murray/issue-forms-body-parser@v2.0.0
      with:
        issue_id: ${{ github.event.issue.number }}
        separator: '###'
        label_marker_start: '>>'
        label_marker_end: '<<'
  
    - name: InitEnv
      run: |
        sudo apt-get update
        sudo apt-get -y install pkg-config git subversion curl wget build-essential python xz-utils zip p7zip-full
        cd /usr/local/bin
        curl -fsSL git.io/file-transfer | sh
        
    # get depot_tools
    - name: depot_tools
      run: |
        git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git
        echo export PATH=\"\$PATH:`pwd`/depot_tools/\" >> ~/.bash_profile
  
    # fetch v8 source code
    - name: fetch v8
      run: |
        source ~/.bash_profile
        fetch v8
        cd v8
    
    # patch source code
    - name: patch v8
      if: ${{ fromJson(steps.parse.outputs.payload).commit_id }} != '0' && !cancelled()
      run: |
        cd v8
        git reset --hard ${{ fromJson(steps.parse.outputs.payload).commit_id }}
        cd ..
  
    # build
    - name: build v8
      if: ${{ fromJson(steps.parse.outputs.payload).upload_v8_files.enable }} == 'true' && !cancelled()
      run: |
        source ~/.bash_profile
        gclient sync -f
        cd v8
        tools/dev/v8gen.py x64.debug -vv
        ninja -C out.gn/x64.debug d8
    
    # compress this file
    - name: zip depot_tools
      if: ${{ fromJson(steps.parse.outputs.payload).upload_depot_files.enable }} == 'true' && !cancelled()
      run: |
        zip -q -r depot_tools.zip depot_tools
    
    - name: ParsedIssueInfo
      run: |
        echo "Issue title: ${{ github.event.issue.title }}"
        echo "${{ fromJson(steps.parse.outputs.payload).commit_id }}"
        echo "${{ fromJson(steps.parse.outputs.payload).upload_depot_files.enable }}"
        echo "${{ fromJson(steps.parse.outputs.payload).upload_v8_files.enable }}"
        
    - name: clean project
      if: ${{ fromJson(steps.parse.outputs.payload).clean_git.enable }} == 'true' && !cancelled()
      run: |
        rm -rf v8/.git
        rm -rf v8/third_party/catapult/.git
        rm -rf v8/third_party/icu/.git
      
    # 7zip v8 src
    - name: 7zip v8_src
      if: ${{ fromJson(steps.parse.outputs.payload).upload_v8_files.enable }} == 'true' && !cancelled()
      run: |
        zip -q -r v8.zip v8
        7z a v8.7z ./v8.zip -v2048m
    
    # upload depot_tools.zip to cowtransfer
    - name: upload depot_tools
      id: upload_depot
      if: ${{ fromJson(steps.parse.outputs.payload).upload_depot_files.enable }} == 'true' && !cancelled()
      run: |
        transfer cow --block 2621440 -s -p 64 --no-progress depot_tools.zip 2>&1 | tee cowtransfer.log
        echo "::set-output name=url::$(cat cowtransfer.log | grep https)"
   
    # upload v8.zip to cowtransfer
    - name: upload v8_src
      if: ${{ fromJson(steps.parse.outputs.payload).upload_v8_files.enable }} == 'true' && !cancelled()
      id: upload_v8
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer cow --block 2621440 -s -p 64 --no-progress v8.7z.001 2>&1 | tee cowtransfer.log
        echo "::set-output name=url_1::$(cat cowtransfer.log | grep https)"
        ./transfer cow --block 2621440 -s -p 64 --no-progress v8.7z.002 2>&1 | tee cowtransfer.log
        echo "::set-output name=url_2::$(cat cowtransfer.log | grep https)"
        
    - name: Comment Issue
      uses: jungwinter/comment@v1
      with:
          type: create
          issue_number: ${{ github.event.issue.number }}
          token: ${{ secrets.TOKEN }}
          body: |
            Auto close. Build with commit "${{ fromJson(steps.parse.outputs.payload).commit_id }}"
            depot tool download url: "${{steps.upload_depot.outputs.url}}"
            v8 files download url part1: "${{steps.upload_v8.outputs.url_1}}"
            v8 files download url part2: "${{steps.upload_v8.outputs.url_2}}"

#     - name: Close Issue
#       uses: peter-evans/close-issue@v1
#       with:
#         issue-number: ${{ github.event.issue.number }}
#         comment: |
#           Auto close. Build with commit "${{ fromJson(steps.parse.outputs.payload).commit_id }}"
#           depot tool download url: "${{steps.upload_depot.outputs.url}}"
#           v8 files download url part1: "${{steps.upload_v8.outputs.url_1}}"
#           v8 files download url part2: "${{steps.upload_v8.outputs.url_2}}"
